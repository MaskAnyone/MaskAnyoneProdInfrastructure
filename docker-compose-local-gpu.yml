version: '3'

services:
  proxy:
    image: ghcr.io/maskanyone/maskanyone/proxy:${MASK_ANYONE_VERSION}
    ports:
      - "443:443"
    restart: "on-failure"

  frontend:
    image: ghcr.io/maskanyone/maskanyone/frontend:${MASK_ANYONE_VERSION}

  postgres:
    image: ghcr.io/maskanyone/maskanyone/postgres:${MASK_ANYONE_VERSION}
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${MASK_ANYONE_DB_USER}
      POSTGRES_PASSWORD: ${MASK_ANYONE_DB_PASSWORD}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  backend:
    image: ghcr.io/maskanyone/maskanyone/backend:${MASK_ANYONE_VERSION}
    depends_on:
      - postgres
    environment:
      BACKEND_PG_HOST: postgres
      BACKEND_PG_PORT: 5432
      BACKEND_PG_USER: ${MASK_ANYONE_DB_USER}
      BACKEND_PG_PASSWORD: ${MASK_ANYONE_DB_PASSWORD}
      BACKEND_PG_DATABASE: prototype
      BACKEND_AUTH_PUBLIC_KEY: ${MASK_ANYONE_KC_PUBLIC_KEY}
      MASK_ANYONE_PLATFORM_MODE: local
    volumes:
      - ./data/backend:/var/lib/maskanyone/data

  worker-basic_masking:
    image: ghcr.io/maskanyone/maskanyone/worker:${MASK_ANYONE_VERSION}
    depends_on:
      - backend
    restart: on-failure
    environment:
      WORKER_TYPE: "basic_masking"
      WORKER_BACKEND_BASE_PATH: ${MASK_ANYONE_WORKER_BACKEND_BASE_PATH}
      WORKER_LOCAL_DATA_DIR: "/worker_data"
    mem_limit: ${MASK_ANYONE_BASIC_MEM_LIMIT}
    cpus: ${MASK_ANYONE_BASIC_CPUS}
    scale: ${MASK_ANYONE_BASIC_WORKER_COUNT}

  sam2:
    image: ghcr.io/maskanyone/maskanyone/sam2:${MASK_ANYONE_VERSION}
    restart: on-failure
    environment:
      SAM2_OFFLOAD_STATE_TO_CPU: ${MASK_ANYONE_SAM2_OFFLOAD_STATE_TO_CPU}
      SAM2_OFFLOAD_VIDEO_TO_CPU: ${MASK_ANYONE_SAM2_OFFLOAD_VIDEO_TO_CPU}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    devices:
      - /dev/nvidia0:/dev/nvidia0
      - /dev/nvidiactl:/dev/nvidiactl
      - /dev/nvidia-uvm:/dev/nvidia-uvm
      - /dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools

  openpose:
    image: ghcr.io/maskanyone/maskanyone/openpose:${MASK_ANYONE_VERSION}
    restart: on-failure
    environment:
      OPENPOSE_MODEL_DIR: "/workspace/openpose/models"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    devices:
      - /dev/nvidia0:/dev/nvidia0
      - /dev/nvidiactl:/dev/nvidiactl
      - /dev/nvidia-uvm:/dev/nvidia-uvm
      - /dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools
